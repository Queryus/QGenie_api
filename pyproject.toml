[project]
name = "app"
version = "0.1.0"
description = ""
authors = [
    {name = "Queryus"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi (>=0.115.14,<0.116.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "pydantic (>=2.11.7,<3.0.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "mysql-connector-python (>=9.4.0,<10.0.0)",
    "pymysql (>=1.1.1,<2.0.0)",
    "pycryptodome (>=3.23.0,<4.0.0)",
    "oracledb (>=3.3.0,<4.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.2"
black = "^25.1.0"
pre-commit = "^4.2.0"
pyinstaller = {version = "^6.14.2", python = ">=3.11,<3.14"}
pytest = "^8.4.1"
httpx = "^0.28.1"
pytest-asyncio = "^1.1.0"


# ----------------------------
# Ruff 설정
# ----------------------------
pytest-cov = "^6.2.1"
python-dotenv = "^1.1.1"
[tool.ruff]
line-length = 120
exclude = [
    ".git",
    "__pycache__",
    "tests/*"
]

[tool.ruff.lint]
ignore = ["E501"] # 줄 길이 경고는 Black이 관리
select = ["I", "E", "F", "W", "C90", "B", "UP"]

# ----------------------------
# Black 설정
# ----------------------------
[tool.black]
line-length = 120
target-version = ["py311"]

# ----------------------------
# Pre-commit 설정은 별도 파일에
# ----------------------------
# `.pre-commit-config.yaml` 파일도 함께 작성해야 동작합니다.